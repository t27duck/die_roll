module DieRoll
  VERSION: String
  MINIMUM_DIE_SIZE: Integer
  DICE_SYNTAX_REGEX: Regexp

  class ParseError < StandardError
  end

  class DieSizeError < StandardError
  end

  class Roll
    attr_reader sides: Array[String]
    attr_reader value: Integer

    def initialize: (sides: Integer, value: Integer) -> void
    def die: -> String
    def total: -> Integer
  end

  class Parser
    attr_reader tokens: Array[String]

    def initialize: (String) -> void

    private
    def generate_tokens: (String) -> void
    def validate_tokens: -> void
  end

  class Roller
    def self.roll: (Parser parser) -> Array[Roll]
  end

  class Result
    attr_reader tokens: Array[String]
    attr_reader rolls: Array[Roll]

    def initialize: (rolls: Array[Roll], tokens: Array[String]) -> void
    def pairs: -> Array[[String, (Integer | nil)]]
    def dice: -> Array[String]
    def values: -> Array[Integer]
    def total: -> Integer
  end
end
